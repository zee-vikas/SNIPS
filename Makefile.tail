##   #######  Makefile.tail  #######
#
# $Header$
#
# Define TARG to be the binaries and ETCFILES to put into ETCDIR

.c.o:
	$(CC) $(CFLAGS) $(PROGCDEFS) -c  $<

## these dirs are listed in Makefile.head
installdir:
	@[ -d $(ROOTDIR) ] || mkdir  $(ROOTDIR)
	@[ -d $(BINDIR) ] ||  mkdir $(BINDIR)
	@[ -d $(DATADIR) ] || mkdir $(DATADIR)
	@[ -d $(ETCDIR) ] ||  mkdir $(ETCDIR)
	@[ -d $(PIDDIR) ] ||  mkdir $(PIDDIR)
	@[ -d $(INITDIR) ] || mkdir $(INITDIR)
	@[ -d $(MSGSDIR) ] || mkdir $(MSGSDIR)
	@[ -d $(RRD_DBDIR) ] || mkdir $(RRD_DBDIR)
	@[ -d $(EXAMPLESDIR) ] || mkdir $(EXAMPLESDIR)
	@[ -d $(DEVICEHELPDIR) ] || mkdir $(DEVICEHELPDIR)
	@[ -d $(CGIDIR) ] || mkdir -p $(CGIDIR)
	@[ -d $(HTMLDIR) ] || mkdir -p $(HTMLDIR)
	@[ -d $(ROOTDIR)/logs ] || mkdir $(ROOTDIR)/logs

init:
	@if [ ! -z "$(INITFILES)" ] && [ -d "$(INITDIR)" ]; then \
	 for i in $(INITFILES) x ; \
	  do \
	   if [ "$$i" = "x" ]; then \
		: ;\
	   else \
		if [ -f "$(INITDIR)/$$i.init" ]; then \
			echo "Not overwriting existing $(INITDIR)/$$i.init";\
		else \
			echo "Installing $$i.init under $(INITDIR)/" ;\
			ln -s $(BINDIR)/snipsprog.init $(INITDIR)/$$i.init ;\
		fi \
	   fi \
	 done \
	fi

depend:
	mkdep $(CFLAGS) `echo $(OBJS) | sed 's/\.o[ $]+/\.c/g'`

## ######## END Makefile.tail  ##########

